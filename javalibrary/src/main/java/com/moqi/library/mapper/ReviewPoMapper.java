package com.moqi.library.mapper;

import com.moqi.library.mapper.po.ReviewPo;
import com.moqi.library.mapper.po.ReviewPoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ReviewPoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @Delete({
        "delete from Review",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @Insert({
        "insert into Review (`user_id`, `book_id`, ",
        "`rating`, `created_at`, ",
        "`content`)",
        "values (#{userId,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, ",
        "#{rating,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{content,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(ReviewPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @InsertProvider(type=ReviewPoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(ReviewPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @SelectProvider(type=ReviewPoSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="rating", property="rating", jdbcType=JdbcType.INTEGER),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<ReviewPo> selectByExampleWithBLOBs(ReviewPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @SelectProvider(type=ReviewPoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="rating", property="rating", jdbcType=JdbcType.INTEGER),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<ReviewPo> selectByExample(ReviewPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `user_id`, `book_id`, `rating`, `created_at`, `content`",
        "from Review",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="rating", property="rating", jdbcType=JdbcType.INTEGER),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    ReviewPo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReviewPoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") ReviewPo row, @Param("example") ReviewPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReviewPoSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("row") ReviewPo row, @Param("example") ReviewPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReviewPoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") ReviewPo row, @Param("example") ReviewPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReviewPoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ReviewPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @Update({
        "update Review",
        "set `user_id` = #{userId,jdbcType=BIGINT},",
          "`book_id` = #{bookId,jdbcType=BIGINT},",
          "`rating` = #{rating,jdbcType=INTEGER},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`content` = #{content,jdbcType=LONGVARCHAR}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(ReviewPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Review
     *
     * @mbg.generated
     */
    @Update({
        "update Review",
        "set `user_id` = #{userId,jdbcType=BIGINT},",
          "`book_id` = #{bookId,jdbcType=BIGINT},",
          "`rating` = #{rating,jdbcType=INTEGER},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(ReviewPo row);
}