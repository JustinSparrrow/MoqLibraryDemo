package com.moqi.library.mapper;

import com.moqi.library.mapper.po.BookPo;
import com.moqi.library.mapper.po.BookPoExample;
import com.moqi.library.mapper.po.BookPoWithBLOBs;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface BookPoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @Delete({
        "delete from Book",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @Insert({
        "insert into Book (`isbn`, `book_name`, ",
        "`author`, `press`, `press_date`, ",
        "`press_place`, `price`, ",
        "`clc_code`, `clc_name`, ",
        "`binding`, `language`, ",
        "`format`, `status`, `created_at`, ",
        "`updated_at`, `pictures`, ",
        "`book_desc`)",
        "values (#{isbn,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, ",
        "#{author,jdbcType=VARCHAR}, #{press,jdbcType=VARCHAR}, #{pressDate,jdbcType=DATE}, ",
        "#{pressPlace,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, ",
        "#{clcCode,jdbcType=VARCHAR}, #{clcName,jdbcType=VARCHAR}, ",
        "#{binding,jdbcType=CHAR}, #{language,jdbcType=VARCHAR}, ",
        "#{format,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{pictures,jdbcType=LONGVARCHAR}, ",
        "#{bookDesc,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(BookPoWithBLOBs row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @InsertProvider(type=BookPoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(BookPoWithBLOBs row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @SelectProvider(type=BookPoSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
        @Result(column="book_name", property="bookName", jdbcType=JdbcType.VARCHAR),
        @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
        @Result(column="press", property="press", jdbcType=JdbcType.VARCHAR),
        @Result(column="press_date", property="pressDate", jdbcType=JdbcType.DATE),
        @Result(column="press_place", property="pressPlace", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DECIMAL),
        @Result(column="clc_code", property="clcCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="clc_name", property="clcName", jdbcType=JdbcType.VARCHAR),
        @Result(column="binding", property="binding", jdbcType=JdbcType.CHAR),
        @Result(column="language", property="language", jdbcType=JdbcType.VARCHAR),
        @Result(column="format", property="format", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pictures", property="pictures", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="book_desc", property="bookDesc", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<BookPoWithBLOBs> selectByExampleWithBLOBs(BookPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @SelectProvider(type=BookPoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
        @Result(column="book_name", property="bookName", jdbcType=JdbcType.VARCHAR),
        @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
        @Result(column="press", property="press", jdbcType=JdbcType.VARCHAR),
        @Result(column="press_date", property="pressDate", jdbcType=JdbcType.DATE),
        @Result(column="press_place", property="pressPlace", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DECIMAL),
        @Result(column="clc_code", property="clcCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="clc_name", property="clcName", jdbcType=JdbcType.VARCHAR),
        @Result(column="binding", property="binding", jdbcType=JdbcType.CHAR),
        @Result(column="language", property="language", jdbcType=JdbcType.VARCHAR),
        @Result(column="format", property="format", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<BookPo> selectByExample(BookPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `isbn`, `book_name`, `author`, `press`, `press_date`, `press_place`, `price`, ",
        "`clc_code`, `clc_name`, `binding`, `language`, `format`, `status`, `created_at`, ",
        "`updated_at`, `pictures`, `book_desc`",
        "from Book",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
        @Result(column="book_name", property="bookName", jdbcType=JdbcType.VARCHAR),
        @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
        @Result(column="press", property="press", jdbcType=JdbcType.VARCHAR),
        @Result(column="press_date", property="pressDate", jdbcType=JdbcType.DATE),
        @Result(column="press_place", property="pressPlace", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DECIMAL),
        @Result(column="clc_code", property="clcCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="clc_name", property="clcName", jdbcType=JdbcType.VARCHAR),
        @Result(column="binding", property="binding", jdbcType=JdbcType.CHAR),
        @Result(column="language", property="language", jdbcType=JdbcType.VARCHAR),
        @Result(column="format", property="format", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pictures", property="pictures", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="book_desc", property="bookDesc", jdbcType=JdbcType.LONGVARCHAR)
    })
    BookPoWithBLOBs selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BookPoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") BookPoWithBLOBs row, @Param("example") BookPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BookPoSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("row") BookPoWithBLOBs row, @Param("example") BookPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BookPoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") BookPo row, @Param("example") BookPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BookPoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BookPoWithBLOBs row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @Update({
        "update Book",
        "set `isbn` = #{isbn,jdbcType=VARCHAR},",
          "`book_name` = #{bookName,jdbcType=VARCHAR},",
          "`author` = #{author,jdbcType=VARCHAR},",
          "`press` = #{press,jdbcType=VARCHAR},",
          "`press_date` = #{pressDate,jdbcType=DATE},",
          "`press_place` = #{pressPlace,jdbcType=VARCHAR},",
          "`price` = #{price,jdbcType=DECIMAL},",
          "`clc_code` = #{clcCode,jdbcType=VARCHAR},",
          "`clc_name` = #{clcName,jdbcType=VARCHAR},",
          "`binding` = #{binding,jdbcType=CHAR},",
          "`language` = #{language,jdbcType=VARCHAR},",
          "`format` = #{format,jdbcType=VARCHAR},",
          "`status` = #{status,jdbcType=CHAR},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`updated_at` = #{updatedAt,jdbcType=TIMESTAMP},",
          "`pictures` = #{pictures,jdbcType=LONGVARCHAR},",
          "`book_desc` = #{bookDesc,jdbcType=LONGVARCHAR}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(BookPoWithBLOBs row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Book
     *
     * @mbg.generated
     */
    @Update({
        "update Book",
        "set `isbn` = #{isbn,jdbcType=VARCHAR},",
          "`book_name` = #{bookName,jdbcType=VARCHAR},",
          "`author` = #{author,jdbcType=VARCHAR},",
          "`press` = #{press,jdbcType=VARCHAR},",
          "`press_date` = #{pressDate,jdbcType=DATE},",
          "`press_place` = #{pressPlace,jdbcType=VARCHAR},",
          "`price` = #{price,jdbcType=DECIMAL},",
          "`clc_code` = #{clcCode,jdbcType=VARCHAR},",
          "`clc_name` = #{clcName,jdbcType=VARCHAR},",
          "`binding` = #{binding,jdbcType=CHAR},",
          "`language` = #{language,jdbcType=VARCHAR},",
          "`format` = #{format,jdbcType=VARCHAR},",
          "`status` = #{status,jdbcType=CHAR},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`updated_at` = #{updatedAt,jdbcType=TIMESTAMP}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(BookPo row);
}