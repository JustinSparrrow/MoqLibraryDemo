package com.moqi.library.mapper;

import com.moqi.library.mapper.po.TransactionPo;
import com.moqi.library.mapper.po.TransactionPoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TransactionPoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @Delete({
        "delete from Transaction",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @Insert({
        "insert into Transaction (`user_id`, `book_id`, ",
        "`borrow_date`, `return_date`, ",
        "`status`, `created_at`, ",
        "`updated_at`)",
        "values (#{userId,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, ",
        "#{borrowDate,jdbcType=DATE}, #{returnDate,jdbcType=DATE}, ",
        "#{status,jdbcType=CHAR}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(TransactionPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @InsertProvider(type=TransactionPoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(TransactionPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @SelectProvider(type=TransactionPoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="borrow_date", property="borrowDate", jdbcType=JdbcType.DATE),
        @Result(column="return_date", property="returnDate", jdbcType=JdbcType.DATE),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TransactionPo> selectByExample(TransactionPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `user_id`, `book_id`, `borrow_date`, `return_date`, `status`, `created_at`, ",
        "`updated_at`",
        "from Transaction",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="borrow_date", property="borrowDate", jdbcType=JdbcType.DATE),
        @Result(column="return_date", property="returnDate", jdbcType=JdbcType.DATE),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP)
    })
    TransactionPo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TransactionPoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") TransactionPo row, @Param("example") TransactionPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TransactionPoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") TransactionPo row, @Param("example") TransactionPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TransactionPoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TransactionPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Transaction
     *
     * @mbg.generated
     */
    @Update({
        "update Transaction",
        "set `user_id` = #{userId,jdbcType=BIGINT},",
          "`book_id` = #{bookId,jdbcType=BIGINT},",
          "`borrow_date` = #{borrowDate,jdbcType=DATE},",
          "`return_date` = #{returnDate,jdbcType=DATE},",
          "`status` = #{status,jdbcType=CHAR},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`updated_at` = #{updatedAt,jdbcType=TIMESTAMP}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TransactionPo row);
}