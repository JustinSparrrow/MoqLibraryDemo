package com.moqi.library.mapper;

import com.moqi.library.mapper.po.DonationPo;
import com.moqi.library.mapper.po.DonationPoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface DonationPoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @Delete({
        "delete from Donation",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @Insert({
        "insert into Donation (`admin_id`, `book_id`, ",
        "`created_at`, `status`, ",
        "`isbn`, `book_desc`)",
        "values (#{adminId,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, ",
        "#{createdAt,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, ",
        "#{isbn,jdbcType=VARCHAR}, #{bookDesc,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(DonationPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @InsertProvider(type=DonationPoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(DonationPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @SelectProvider(type=DonationPoSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
        @Result(column="book_desc", property="bookDesc", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<DonationPo> selectByExampleWithBLOBs(DonationPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @SelectProvider(type=DonationPoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR)
    })
    List<DonationPo> selectByExample(DonationPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `admin_id`, `book_id`, `created_at`, `status`, `isbn`, `book_desc`",
        "from Donation",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.BIGINT),
        @Result(column="book_id", property="bookId", jdbcType=JdbcType.BIGINT),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
        @Result(column="book_desc", property="bookDesc", jdbcType=JdbcType.LONGVARCHAR)
    })
    DonationPo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DonationPoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") DonationPo row, @Param("example") DonationPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DonationPoSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("row") DonationPo row, @Param("example") DonationPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DonationPoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") DonationPo row, @Param("example") DonationPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DonationPoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DonationPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @Update({
        "update Donation",
        "set `admin_id` = #{adminId,jdbcType=BIGINT},",
          "`book_id` = #{bookId,jdbcType=BIGINT},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`status` = #{status,jdbcType=INTEGER},",
          "`isbn` = #{isbn,jdbcType=VARCHAR},",
          "`book_desc` = #{bookDesc,jdbcType=LONGVARCHAR}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(DonationPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Donation
     *
     * @mbg.generated
     */
    @Update({
        "update Donation",
        "set `admin_id` = #{adminId,jdbcType=BIGINT},",
          "`book_id` = #{bookId,jdbcType=BIGINT},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`status` = #{status,jdbcType=INTEGER},",
          "`isbn` = #{isbn,jdbcType=VARCHAR}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(DonationPo row);
}